name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    name: Test on Python ${{ matrix.python-version }} • ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Cache Poetry and virtualenv
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pypoetry
            ~/.cache/pip
            .venv
          key: ${{ runner.os }}-py${{ matrix.python-version }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-py${{ matrix.python-version }}-poetry-

      - name: Install dependencies
        run: |
          poetry --version
          poetry install --no-interaction --no-ansi

      - name: Show dependency tree
        run: |
          poetry run python -m pip freeze

      - name: Run pre-commit (linters, formatters, static checks)
        run: |
          poetry run pre-commit run --all-files --show-diff-on-failure

      - name: Run tests with coverage
        env:
          PYTHONPATH: src
        run: |
          poetry run pytest -q --maxfail=1 --disable-warnings --cov=omr_lab --cov-report=xml --cov-report=term

      - name: Upload coverage.xml as artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python-version }}
          path: coverage.xml
          if-no-files-found: ignore

      - name: Upload junit (если настроено)
        if: hashFiles('junit.xml') != ''
        uses: actions/upload-artifact@v4
        with:
          name: junit-${{ matrix.python-version }}
          path: junit.xml
          if-no-files-found: ignore
