[tool.poetry]
name = "omr-lab"
version = "0.1.0"
description = "Research lab for Optical Music Recognition: rules, hybrid, and AI pipelines with lyrics OCR."
authors = ["Your Name <you@example.com>"]
readme = "README.md"
packages = [{ include = "omr_lab", from = "src" }]

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
typer = "^0.12.3"
rich = "^13.7.1"
pydantic = "^2.7.4"
pyyaml = "^6.0.2"
structlog = "^24.1.0"
numpy = "^1.26.4"
opencv-python = "^4.10.0.84"
mido = "^1.3.2"
# torch / tensorflow are optional for later stages
# torch = {version = "^2.3.0", optional = true}
# tensorflow = {version = "^2.16.1", optional = true}
click = "8.1.7"
music21 = "^9.7.1"

[tool.poetry.group.dev.dependencies]
pytest = "^8.2.0"
pytest-cov = "^5.0.0"
mypy = "^1.10.0"
ruff = "^0.5.0"
black = "^24.4.2"
pre-commit = "^3.7.1"
types-pyyaml = "^6.0.12.20250809"


[tool.poetry.group.ai.dependencies]
torch = {version = "==2.3.*", source = "pypi"}

[tool.poetry.scripts]
omr = "omr_lab.services.cli:app"

[tool.black]
line-length = 100
target-version = ["py310"]

[tool.isort]
profile = "black"
line_length = 100

[tool.ruff]
line-length = 100
target-version = "py310"

[tool.ruff.lint]
select = ["E","F","B","UP","I"]
ignore = ["E501"]

[tool.pytest.ini_options]
addopts = "-q"
testpaths = ["tests"]

[tool.mypy]
python_version = "3.10"
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true
strict_optional = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
